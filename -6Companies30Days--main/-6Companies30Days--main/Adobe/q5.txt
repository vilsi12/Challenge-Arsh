class Solution{
    public:
    long long fun(int i,int sum,int limit,int x,int n,long long dp[][1001]){
        if(i>limit+1){
            return 0;
        }
        if(sum>n){
            return 0;
        }
        if(dp[i][sum]!=-1){
            return dp[i][sum];
        }
        if(sum==n){
            return 1;
        }
        
        return dp[i][sum]=((fun(i+1,sum,limit,x,n,dp)%1000000007)+(fun(i+1,sum+pow(i,x),limit,x,n,dp)%1000000007))%1000000007;
    }
    
    
    long long numOfWays(int n,int x){
        long long dp[1001][1001];
        int limit = pow(n,1.0/x);
        memset(dp,-1,sizeof dp);
        return fun(1,0,limit,x,n,dp);
    }

};

