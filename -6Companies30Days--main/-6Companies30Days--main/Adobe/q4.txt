class Solution{
public:

    bool subsetsum(int arr[],int s,int n){
        // int n=sizeof(arr)/sizeof(arr[0]);
        bool dp[n+1][s+1];
        for(int i=0;i<=n;i++){
            for(int j=0;j<=s;j++){
                if(i==0){
                    dp[i][j]=false;
                }
                if(j==0){
                    dp[i][j]=true;
                }
            }
        }
        
        for(int i=1;i<=n;i++){
            for(int j=1;j<=s;j++){
                if(arr[i-1]<=j){
                    dp[i][j]=dp[i-1][j-arr[i-1]] || dp[i-1][j];
                }
                else{
                    dp[i][j]=dp[i-1][j];
                }
            }
        }
        return dp[n][s];
    }



    int equalPartition(int N, int arr[])
    {
        // code here
        int s=0;
        for(int i=0;i<N;i++){
            s+=arr[i];
        }
        
        if(s%2!=0){
            return 0;
        }
        
        else{
            if(subsetsum(arr,s/2,N)){
                return 1;
            }
            return 0;
        }
    }
};
