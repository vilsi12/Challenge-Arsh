class Solution {
public:
    int orangesRotting(vector<vector<int>>& grid) {
        if(grid.empty()){
            return 0;
        }
        int total=0;
        int ans=0;
        int m=grid.size();
        int n=grid[0].size();
        queue<pair<int,int>>q;
        
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]!=0){
                    total++;
                }
                if(grid[i][j]==2){
                    q.push({i,j});
                }
            }
        }
        int cnt=0;
        while(!q.empty()){
            int k=q.size();
            cnt+=k;
            int xi[4]={0,0,1,-1};
            int yi[4]={1,-1,0,0};
            
            while(k--){
                int x=q.front().first;
                int y=q.front().second;
                q.pop();
                for(int i=0;i<4;i++){
                    int dx=x+xi[i];
                    int dy=y+yi[i];
                    
                    if(dx<0 || dy<0 || dx>=m || dy>=n || grid[dx][dy]!=1){
                        continue;
                    }
                    grid[dx][dy]=2;
                    q.push({dx,dy});
                }
            }
            if(!q.empty()){
                ans++;
            }
        }
        
        if(total==cnt){
            return ans;
        }
        else{
            return -1;
        }
    }
};
