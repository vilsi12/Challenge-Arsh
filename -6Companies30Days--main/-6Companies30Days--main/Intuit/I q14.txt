class Solution {
public:
    int maxDistance(vector<vector<int>>& grid) {
        
        queue<pair<int,int>>q;
        int n=grid.size();
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]==1){
                    q.push({i,j});
                }
            }
        }
        if(q.size()==0){
            return -1;
        }
        if(q.size()==n*n){
            return -1;
        }
        
        int xi[4]={1,-1,0,0};
        int yi[4]={0,0,1,-1};
        
        int d=0;
        while(!q.empty()){
            d++;
            int s=q.size();
            while(s>0){
                pair<int,int>p=q.front();
                q.pop();
                int x=p.first;
                int y=p.second;
                for(int i=0;i<4;i++){
                    int xd=x+xi[i];
                    int yd=y+yi[i];
                    if(xd>=0 && xd<n && yd>=0 && yd<n && grid[xd][yd]==0){
                        grid[xd][yd]=1;
                        q.push({xd,yd});
                    }
                }
                s--;
            }
        }
        
        return d-1;
    }
};

